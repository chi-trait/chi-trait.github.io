{"ast":null,"code":"var _jsxFileName = \"/Users/tongshuangwu/sourcetree/chi-trait/src/components/OrganizerList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./styles.scss\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrganizerEntry = _ref => {\n  _s();\n\n  let {\n    organizer\n  } = _ref;\n  const [isSeeDescription, setIsSeeDescription] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: organizer.webpage,\n    className: \"entry\",\n    onMouseOut: () => setIsSeeDescription(false),\n    onMouseOver: () => {\n      setIsSeeDescription(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      className: \"avatar\",\n      alt: organizer.name,\n      src: `${process.env.PUBLIC_URL}/images/${organizer.img}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(\"description\", {\n          visible: isSeeDescription\n        }),\n        children: organizer.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: organizer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"affiliation\",\n        children: organizer.affliation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrganizerEntry, \"LkuN9F+J20yXyS3/kUilsbO5yrI=\");\n\n_c = OrganizerEntry;\n\nconst OrganizerList = _ref2 => {\n  let {\n    organizers\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    className: \"organizer-list\",\n    children: organizers.map(organizer => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xl: 2,\n      md: 3,\n      sm: 3,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(OrganizerEntry, {\n        organizer: organizer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, organizer.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OrganizerList;\nexport default OrganizerList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrganizerEntry\");\n$RefreshReg$(_c2, \"OrganizerList\");","map":{"version":3,"sources":["/Users/tongshuangwu/sourcetree/chi-trait/src/components/OrganizerList/index.tsx"],"names":["Grid","Avatar","React","clsx","OrganizerEntry","organizer","isSeeDescription","setIsSeeDescription","useState","webpage","name","process","env","PUBLIC_URL","img","visible","description","affliation","OrganizerList","organizers","map"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAoC,OAApC;AAGA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,cAAc,GAAG,QAIH;AAAA;;AAAA,MAJI;AACtBC,IAAAA;AADsB,GAIJ;AAClB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAhD;AACA,sBACE;AACE,IAAA,IAAI,EAAEH,SAAS,CAACI,OADlB;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,UAAU,EAAE,MAAMF,mBAAmB,CAAC,KAAD,CAHvC;AAIE,IAAA,WAAW,EAAE,MAAM;AACjBA,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KANH;AAAA,4BAQE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,GAAG,EAAEF,SAAS,CAACK,IAFjB;AAGE,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,WAAUR,SAAS,CAACS,GAAI;AAHzD;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEX,IAAI,CAAC,aAAD,EAAgB;AAAEY,UAAAA,OAAO,EAAET;AAAX,SAAhB,CAApB;AAAA,kBACGD,SAAS,CAACW;AADb;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBX,SAAS,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BL,SAAS,CAACY;AAAxC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;GAAMb,c;;KAAAA,c;;AA+BN,MAAMc,aAAa,GAAG,SAIF;AAAA,MAJG;AACrBC,IAAAA;AADqB,GAIH;AAClB,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,gBAAtC;AAAA,cACGA,UAAU,CAACC,GAAX,CAAgBf,SAAD,iBACd,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,EAApC;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,OAA6CA,SAAS,CAACK,IAAvD;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAdD;;MAAMQ,a;AAeN,eAAeA,aAAf","sourcesContent":["import { Grid, Avatar } from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\nimport { Organizer } from \"../../stores/Interfaces\";\n\nimport \"./styles.scss\";\nimport clsx from \"clsx\";\n\nconst OrganizerEntry = ({\n  organizer,\n}: {\n  organizer: Organizer;\n}): ReactElement => {\n  const [isSeeDescription, setIsSeeDescription] = React.useState(false);\n  return (\n    <a\n      href={organizer.webpage}\n      className=\"entry\"\n      onMouseOut={() => setIsSeeDescription(false)}\n      onMouseOver={() => {\n        setIsSeeDescription(true);\n      }}\n    >\n      <Avatar\n        className=\"avatar\"\n        alt={organizer.name}\n        src={`${process.env.PUBLIC_URL}/images/${organizer.img}`}\n      />\n      <div>\n        <div className={clsx(\"description\", { visible: isSeeDescription })}>\n          {organizer.description}\n        </div>\n        <div className=\"name\">{organizer.name}</div>\n        <div className=\"affiliation\">{organizer.affliation}</div>\n      </div>\n    </a>\n  );\n};\n\nconst OrganizerList = ({\n  organizers,\n}: {\n  organizers: Organizer[];\n}): ReactElement => {\n  return (\n    <Grid container spacing={3} className=\"organizer-list\">\n      {organizers.map((organizer: Organizer) => (\n        <Grid item xl={2} md={3} sm={3} xs={12} key={organizer.name}>\n          <OrganizerEntry organizer={organizer} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\nexport default OrganizerList;\n"]},"metadata":{},"sourceType":"module"}