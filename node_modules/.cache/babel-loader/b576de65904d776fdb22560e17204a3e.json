{"ast":null,"code":"var _jsxFileName = \"/Users/tongshuangwu/sourcetree/chi-trait/src/components/ScheduleList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport clsx from \"clsx\";\nimport \"./styles.scss\";\nimport { Visibility } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ScheduleEntry = _ref => {\n  _s();\n\n  let {\n    schedule\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [schedule.start, \" -- \", schedule.end]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme\",\n        children: schedule.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsOpen(!isOpen),\n        className: clsx(\"icon\", {\n          visible: schedule.description\n        }),\n        children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: schedule.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ScheduleEntry, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = ScheduleEntry;\n\nconst ScheduleList = _ref2 => {\n  let {\n    schedules\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-list\",\n    children: schedules.map((schedule, index) => /*#__PURE__*/_jsxDEV(ScheduleEntry, {\n      schedule: schedule\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ScheduleList;\nexport default ScheduleList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScheduleEntry\");\n$RefreshReg$(_c2, \"ScheduleList\");","map":{"version":3,"sources":["/Users/tongshuangwu/sourcetree/chi-trait/src/components/ScheduleList/index.tsx"],"names":["useState","clsx","Visibility","ScheduleEntry","schedule","isOpen","setIsOpen","start","end","title","visible","description","ScheduleList","schedules","map","index"],"mappings":";;;AAAA,SAAuBA,QAAvB,QAAuC,OAAvC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;;AAEA,MAAMC,aAAa,GAAG,QAAwD;AAAA;;AAAA,MAAvD;AAAEC,IAAAA;AAAF,GAAuD;AAC5E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACGI,QAAQ,CAACG,KADZ,UACuBH,QAAQ,CAACI,GADhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBJ,QAAQ,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,OAAO,EAAE,MAAMH,SAAS,CAAC,CAACD,MAAF,CAD1B;AAEE,QAAA,SAAS,EAAEJ,IAAI,CAAC,MAAD,EAAS;AAAES,UAAAA,OAAO,EAAEN,QAAQ,CAACO;AAApB,SAAT,CAFjB;AAAA,+BAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGN,MAAM,iBAAI;AAAA,gBAAMD,QAAQ,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,YAbb;AAAA,kBADF;AAiBD,CAnBD;;GAAMR,a;;KAAAA,a;;AAoBN,MAAMS,YAAY,GAAG,SAID;AAAA,MAJE;AACpBC,IAAAA;AADoB,GAIF;AAClB,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGA,SAAS,CAACC,GAAV,CAAc,CAACV,QAAD,EAAWW,KAAX,kBACb,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEX;AAAzB,OAAwCW,KAAxC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;MAAMH,Y;AAaN,eAAeA,YAAf","sourcesContent":["import { ReactElement, useState } from \"react\";\nimport { Schedule } from \"../../stores/Interfaces\";\nimport clsx from \"clsx\";\nimport \"./styles.scss\";\nimport { Visibility } from \"@material-ui/icons\";\n\nconst ScheduleEntry = ({ schedule }: { schedule: Schedule }): ReactElement => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <>\n      <div className=\"schedule\">\n        <div className=\"time\">\n          {schedule.start} -- {schedule.end}\n        </div>\n        <div className=\"theme\">{schedule.title}</div>\n        <div\n          onClick={() => setIsOpen(!isOpen)}\n          className={clsx(\"icon\", { visible: schedule.description })}\n        >\n          <Visibility />\n        </div>\n      </div>\n      {isOpen && <div>{schedule.description}</div>}\n    </>\n  );\n};\nconst ScheduleList = ({\n  schedules,\n}: {\n  schedules: Schedule[];\n}): ReactElement => {\n  return (\n    <div className=\"schedule-list\">\n      {schedules.map((schedule, index) => (\n        <ScheduleEntry schedule={schedule} key={index} />\n      ))}\n    </div>\n  );\n};\nexport default ScheduleList;\n"]},"metadata":{},"sourceType":"module"}